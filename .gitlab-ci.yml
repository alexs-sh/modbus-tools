stages:
  - style
  - build
  - analyze

.docker-template:
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
  tags:
    - gitlab-org-docker

format:
  stage: style
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable
  script:
    - cargo fmt --check

x86_64-debian-stable:
  stage: build
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable
  script:
    - cargo build --release
    - cargo test --release
  artifacts:
    paths:
    - target/release/slave*

x86_64-mingw-debian-stable:
  stage: build
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable-mingw
  script:
    - cargo build --release --target x86_64-pc-windows-gnu
  artifacts:
    paths:
    - target/x86_64-pc-windows-gnu/release/slave*

armv7-debian-stable:
  stage: build
  extends:
    - .docker-template
  image: alexshcdr/rustc-armv7-debian-stable
  script:
    - cargo build --release --target=armv7-unknown-linux-gnueabihf
  artifacts:
    paths:
    - target/armv7-unknown-linux-gnueabihf/release/slave*

aarch64-debian-stable:
  stage: build
  extends:
    - .docker-template
  image: alexshcdr/rustc-aarch64-debian-stable
  script:
    - cargo build --release --target=aarch64-unknown-linux-gnu
  artifacts:
    paths:
    - target/aarch64-unknown-linux-gnu/release/slave*

clippy:
  stage: analyze
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable
  needs: [format]
  script:
    - cargo clippy

coverage:
  stage: analyze
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable
  needs: [format]
  before_script:
    - curl -L https://github.com/mozilla/grcov/releases/download/v0.8.12/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
  script:
    - export RUSTFLAGS="-Cinstrument-coverage"
    - export LLVM_PROFILE_FILE="reports-%p-%m.profraw"
    - cargo build
    - cargo test
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/*" -t html --branch --ignore-not-existing -o ./html
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/*" -t cobertura --branch --ignore-not-existing -o coverage.xml
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/*" -t lcov --branch --ignore-not-existing --ignore '/*' -o coverage.lcov
    - lcov --summary ./coverage.lcov
  coverage: /^\s*lines\.*\:\s*[0-9]+.[0-9]+%/
  artifacts:
    paths:
      - html
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

miri:
  stage: analyze
  extends:
    - .docker-template
  image: alexshcdr/rustc-x86_64-debian-stable
  needs: [format]
  script:
    - rustup default nightly
    - rustup component add miri
    - rustup update
    - cargo miri test


