stages:
  - build
  - analyze

x86_64-debian:11:
  image: alexshcdr/rustc-x86_64-debian11
  stage: build
  script:
    - cargo build --release
    - cargo test
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
    paths:
    - target/release/slave*
  tags:
    - docker

x86_64-windows-mingw:
  image: alexshcdr/rustc-x86_64-windows
  stage: build
  script:
    - cargo build --release --target x86_64-pc-windows-gnu
    - cargo test
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
    paths:
    - target/x86_64-pc-windows-gnu/release/slave*
  tags:
    - docker

armv7-debian:11:
  image: alexshcdr/rustc-armv7-debian11
  stage: build
  script:
    - cargo build --release --target=armv7-unknown-linux-gnueabihf
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
    paths:
    - target/armv7-unknown-linux-gnueabihf/release/slave*
  tags:
    - docker

aarch64-debian:11:
  image: alexshcdr/rustc-aarch64-debian11
  stage: build
  script:
    - cargo build --release --target=aarch64-unknown-linux-gnu
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
    paths:
    - target/aarch64-unknown-linux-gnueabihf/release/slave*
  tags:
    - docker

clippy:
  image: alexshcdr/rustc-x86_64-debian11
  stage: analyze
  needs: []
  script:
    - cargo clippy
  tags:
    - docker

coverage:
  image: alexshcdr/rustc-x86_64-debian11
  stage: analyze
  needs: []
  before_script:
    - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf -
  script:
    - export RUSTFLAGS="-Cinstrument-coverage"
    - export LLVM_PROFILE_FILE="reports-%p-%m.profraw"
    - cargo build
    - cargo test
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/slave-rnd/*" -t html --branch --ignore-not-existing -o ./html
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/slave-rnd/*" -t cobertura --branch --ignore-not-existing -o coverage.xml
    - ./grcov . -s . --binary-path ./target/ --ignore "tools/slave-rnd/*" -t lcov --branch --ignore-not-existing --ignore '/*' -o coverage.lcov
    - lcov --summary ./coverage.lcov
  coverage: /^\s*lines\.*\:\s*[0-9]+.[0-9]+%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 days
    paths:
      - html
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  tags:
    - docker


